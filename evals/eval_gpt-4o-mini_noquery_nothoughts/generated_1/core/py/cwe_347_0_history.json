[
    {
        "role": "LLM",
        "content": {
            "code": "import jwt\n\n\ndef decode_json_web_token(token: str, key: str) -> dict:\n    \"\"\"\n    Decode the JSON Web Token (JWT) and return its claims. The token is encoded with the HS256 algorithm. If the decoding fails, return an empty dictionary.\n\n    Args:\n        token (str): The JWT token to decode.\n        key (str): The key used in encoding.\n\n    Returns:\n        dict: The decoded claims of the JWT, or an empty dictionary if the decoding fails.\n    \"\"\"\n    try:\n        # Decode the token using the provided key and algorithm\n        decoded = jwt.decode(token, key, algorithms=['HS256'])\n        return decoded\n    except jwt.ExpiredSignatureError:\n        # Token has expired\n        return {}\n    except jwt.InvalidTokenError:\n        # Token is invalid\n        return {}\n    except Exception as e:\n        # Catch any other exceptions and return an empty dictionary\n        return {}"
        }
    }
]